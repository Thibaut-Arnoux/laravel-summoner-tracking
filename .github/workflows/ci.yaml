name: CI via Docker
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - closed
    branches:
      - master
jobs:
  build-ci:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    environment: ci
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPOSITORY }}
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/ci/Dockerfile
          tags: ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPOSITORY }}:pr-${{ github.event.number }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
  run-ci:
    needs: build-ci
    runs-on: ubuntu-latest
    environment: ci
    container:
      image: ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPOSITORY }}:pr-${{ github.event.number }}
      env:
        APP_KEY: ${{ secrets.APP_KEY }}
        DB_CONNECTION: pgsql
        DB_HOST: pgsql
        DB_PORT: 5432
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    services:
      pgsql:
        image: postgres:15
        env:
          POSTGRES_DB: testing # defined in phpunit.xml
          POSTGRES_USER: ${{ secrets.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
      docker:
        image: docker:dind
        options: --privileged # Required for Docker-in-Docker
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock:ro
    defaults:
      run:
        working-directory: /var/www/html
    steps:
      - name: Lint
        run: ./vendor/bin/pint
      - name: Static analysis
        run: ./vendor/bin/phpstan
        # Use to fix laravel test warning, env variables are set on container level
      - name: Empty testing envfile
        run: touch .env.testing
      - name: Test
        run: php artisan test --compact
      - name: Test coverage
        run: php artisan test --coverage --min=70
        # Docker install here thanks to dind container and
        # not installed in container image to have a php base image and not a dind base image
      - name: Install Docker
        run: |
          apt update
          apt install -y docker.io
      - name: Test Build Apache image
        run: |
          docker build -f ./docker/production/apache2/Dockerfile .
      - name: Test Build Php image
        run: |
          docker build -f ./docker/production/php/Dockerfile .
  clean-ci:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    environment: ci
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Delete ci tag on Docker Hub
        uses: ./.github/actions/docker-hub-delete-tags
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ vars.DOCKERHUB_REPOSITORY }}
          tag: pr-${{ github.event.number }}
